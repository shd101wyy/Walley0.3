function f(a,b){this.e=a;this.a=b;this.d=2}function g(a,b,c){this.j=a;this.body=b;this.h=c;this.d=6}function k(a,b,c){this.j=a;this.body=b;this.h=c;this.d=4}function m(a,b,c){this.d=c;this.b=a;this.c=b}function n(a,b){return new f(a,b)}function p(a){if(0==a.length)return!1;"-"==a[0]&&(a=a.slice(1));return"0"===a||/^[1-9][0-9]*$/.test(a)}
function q(a){if("string"!==typeof a)return!1;var b=a.indexOf("/");if(-1===b)return!1;var c=a.slice(0,b),b=a.slice(b+1);return p(c)&&p(b)?(0===parseInt(b)&&console.log("Invalid ratio --- "+a+" with denominator 0"),!0):!1}function u(a){return a instanceof m}function w(a){return null===a?(console.log("ERROR: Cannot get car of ()"),null):a.e}function x(a){return w(a.a)}
function y(a){function b(a,h){if(h>=a.length)return null;if(" "===a[h]||"\n"==a[h]||"\t"==a[h]||","===a[h])return b(a,h+1);if("("===a[h])return n("(",b(a,h+1));if("["===a[h])return n("(",n("vector",b(a,h+1)));if("{"===a[h])return n("(",n("dictionary",b(a,h+1)));if(")"===a[h]||"]"==a[h]||"}"==a[h])return n(")",b(a,h+1));if("~"===a[h]&&"@"===a[h+1])return n("~@",b(a,h+2));if("'"===a[h]||"`"==a[h]||"~"==a[h])return n(a[h],b(a,h+1));if('"'===a[h]){var t=d(a,h+1);return n(a.slice(h,t),b(a,t))}if(h+3<=
a.length&&";;;"===a.slice(h,h+3))return b(a,e(a,h+3));if(";"===a[h])return b(a,l(a,h+1));t=c(a,h+1);return n(a.slice(h,t),b(a,t))}function c(a,b){return b==a.length?b:"("==a[b]||")"==a[b]||"["==a[b]||"]"==a[b]||"{"==a[b]||"}"==a[b]||" "==a[b]||"\t"==a[b]||"\n"==a[b]||";"==a[b]||","==a[b]?b:c(a,b+1)}function d(a,b){return b==a.length?(console.log("ERROR: Incomplete String"),b):"\\"==a[b]?d(a,b+2):'"'===a[b]?b+1:d(a,b+1)}function e(a,b){return b==a.length?b:b+3<=a.length&&";;;"===a.slice(b,b+3)?b+3:
e(a,b+1)}function l(a,b){return b==a.length?b:"\n"==a[b]?b+1:l(a,b+1)}return b(a,0)}
function z(a){function b(a){if(!isNaN(parseFloat(a))&&isFinite(a))return p(a)?new m(parseFloat(a),1,10):new m(parseFloat(a),1,12);if(q(a))return new m(parseFloat(a.slice(0,a.indexOf("/"))),parseFloat(a.slice(a.indexOf("/")+1)),10);var b=a.split(":");if(":"===a||1==b.length||":"===a[0]||":"===a[a.length-1])return a;a=b[0];b=b.slice(1);return c(a,b)}function c(a,b){function c(a,b,d){return d===a.length?b:c(a,n(b,n(":"+a[d],null)),d+1)}return c(b,n(a,n(":"+b[0],null)),1)}function d(a){var c;c="'"===
w(a)?"quote":"~"===w(a)?"unquote":"~@"===w(a)?"unquote-splice":"quasiquote";a=a.a;if("("===w(a))return n(c,n(e(a.a),null));if("'"===w(a)||"~"===w(a)||"`"===w(a))return n(c,n(d(a),null));l=a.a;return n(c,n(b(w(a)),null))}function e(a){return null===a?(console.log("ERROR: Incomplete Statement. Missing )"),l=null):")"===w(a)?(l=a.a,null):"("===w(a)?n(e(a.a),e(l)):"'"===w(a)||"~"===w(a)||"`"===w(a)||"~@"===w(a)?n(d(a),e(l)):n(b(w(a)),e(a.a))}var l=a;return null==a?null:"("===w(a)?n(e(a.a),z(l)):"'"===
w(a)||"~"===w(a)||"`"===w(a)||"~@"===w(a)?n(d(a),l):n(b(w(a)),z(a.a))}function A(a,b){var c;c=a;for(var d=b;0!=d;){var e=c;c=d;d=e%d}return new m(a/c,b/c,10)}function C(a){return 12===a.d?""+a.b.toFixed(10):1===a.c?""+a.b:a.b+"/"+a.c}
function D(a){if(null===a)return"()";for(var b="(";;){if(null===a){b=b.slice(0,b.length-1)+")";break}if(!(a instanceof f)){var c=a,b=b+". ";null===c?b+="())":u(c)?b=b+C(c)+")":"string"===typeof c?b=b+c+")":c instanceof f?b=b+D(c)+")":c instanceof Array?b=b+E(c)+")":6===c.d?b+="< user-defined-procedure >)":"function"===typeof c?b+="< builtin-primitive-procedure >)":4===c.d?b+="< macro >":c instanceof Object&&(b=b+F(c)+")");break}c=a.e;null===c?b+="() ":u(c)?b=b+C(c)+" ":"string"===typeof c?b=b+c+" ":
c instanceof f?b=b+D(c)+" ":c instanceof Array?b=b+E(c)+" ":"function"===typeof c?b+="< builtin-procedure > ":6===c.d?b+="< user-defined-procedure > ":4===c.d?b+="< macro > ":c instanceof Object&&(b=b+F(c)+" ");a=a.a}return b}
function E(a){for(var b="[",c=0;c<a.length;c++){var d=a[c];null===d?b+="() ":u(d)?b=b+C(d)+" ":"string"===typeof d?b=b+d+" ":d instanceof f?b=b+D(d)+" ":d instanceof Array?b=b+E(d)+" ":6===d.d?b+="< user-defined-procedure > ":"function"===typeof d?b+="< builtin-procedure > ":4===d.d?b+="< macro > ":d instanceof Object&&(b=b+F(d)+" ")}return b=b.slice(0,b.length-1)+"]"}
function F(a){var b="{",c;for(c in a){var b=b+c+" ",d=a[c];null===d?b+="(), ":u(d)?b=b+C(d)+", ":"string"===typeof d?b=b+d+", ":d instanceof f?b=b+D(d)+", ":d instanceof Array?b=b+E(d)+",":6===d.d?b+="< user-defined-procedure >, ":"function"===typeof d?b+="< builtin-procedure >, ":4===d.d?b+="< macro > ":d instanceof Object&&(b=b+F(d)+", ")}return b=b.slice(0,b.length-1)+"}"}
function G(a){if(u(a))return C(a);if("string"===typeof a)return a;if(a instanceof f)return D(a);if(a instanceof Array)return E(a);if(6===a.d)return"< user-defined-procedure >";if(8===a.d)return"undefined";if(a instanceof Object)return F(a);console.log("Function display: Invalid Parameters Type");return"undefined"}function H(a,b){for(var c=b.length-1;0<=c;c--)if(a in b[c])return b[c][a];console.log("ERROR: unbound variable: "+a);return"undefined"}
function I(a,b){var c=w(a);return n("def",n(c,n(n("lambda",n(n("vector",a.a),b)),null)))}function J(a,b,c){for(var d=c.length-1;0<=d;d--)if(a in c[d])return c[d][a]=b;console.log("ERROR: Function set!, var name "+a+" does not exist");return"undefined"}
function K(a,b){if(null===a)return null;var c=w(a);if("string"===typeof c){if("."===c)return c=x(a),"string"===typeof c?c:"unquote"===w(c)?L(x(c),b):K(c,b)}else if(2===c.d){if("unquote"===w(c))return n(L(x(c),b),K(a.a,b));if("unquote-splice"===w(c)){var d=function(a,b){return null==a?b:n(w(a),d(a.a,b))},c=L(x(c),b);return c instanceof f?d(c,K(a.a,b)):(console.log("ERROR: ~@ only support list type value"),null)}return n(K(c,b),K(a.a,b))}return n(c,K(a.a,b))}
function M(a,b,c){if("vector"!==a.e)return console.log("ERROR: when defining lambda, please use (lambda [args] body) format"),"undefined";a=a.a;for(var d={f:[],g:[]};null!=a;){var e=w(a);if("string"===typeof e)if(":"===e[0]){e=e.slice(1);a=a.a;var l=L(w(a),c);d.f.push(e);d.g.push(l)}else if("."===e){d.f.push(".");d.g.push("undefined");a=a.a;e=w(a);":"==e[0]?(e=e.slice(1),a=a.a,l=L(w(a),c),d.f.push(e),d.g.push(l)):(d.f.push(e),d.g.push(null));break}else d.f.push(e),d.g.push("undefined");else return console.log("ERROR: Function definition error."),
"undefined";a=a.a}return new g(d,b,c.slice(0))}function N(a,b,c){if("vector"!==a.e)return console.log("ERROR: when defining macro_args, please use (defmacro macro_name [args] body) format"),"undefined";a=a.a;return new k(a,b,c.slice(0))}function O(a,b){return null===a?null:n(L(w(a),b),O(a.a,b))}
function P(a,b){function c(a,b,d){for(;null!==b;){if(null===d){console.log("ERROR: Invalid macro. Pattern doesn't match");break}var e=w(b);if(e instanceof f)"vector"===b.e.e?c(a,b.e.a,d.e.a):c(a,b.e,d.e);else if("."===e){a[x(b)]=d;break}else{var l=w(d);a[e]=l}b=b.a;d=d.a}}var d=a.h.slice(0),e=a.body,l={};c(l,a.j,b);d.push(l);return[Q(e,d),a.h]}function Q(a,b){for(var c=null;null!==a;)c=L(w(a),b),a=a.a;return c}
function L(a,b){for(;;){if(null===a)return null;if("string"===typeof a)return'"'===a[0]?a.slice(1,a.length-1):":"===a[0]?a.slice(1):H(a,b);if(a instanceof m)return a;if(2===a.d){var c=w(a);if("quote"===c){var d=function(a){if(null==a)return null;var b=w(a);return b instanceof f?n(d(b),d(a.a)):"."===b?x(a):n(b,d(a.a))};return x(a)instanceof f?d(x(a)):x(a)}if("quasiquote"===c)return c=x(a),"string"!==typeof c&&2===c.d?K(c,b):c;if("def"===c){var e=x(a),c=w(a.a.a);if("string"===typeof e&&e in b[b.length-
1])return console.log("\nERROR: It is not recommended or allowed to redefine an existed variable: "+e+"\nTo change the value of a variable. Use (set! var-name var-value)\nIn this case: (set! "+e+" "+G(c)+")"),"undefined";if("string"!==typeof e&&2===e.d)return L(I(e,a.a.a),b);if("string"!==typeof e)return console.log("ERROR: Invalid variable name : "+R["->str"]([e])),"undefined";c=L(c,b);return b[b.length-1][e]=c}if("set!"===c)return e=x(a),c=L(w(a.a.a),b),J(e,c,b);if("let"===c){var l=x(a);if("vector"!==
l.e)return console.log("ERROR: please use [] in let when binding variables. Like (let [a 0 b 2] (+ a b))"),"undefined";l=l.a;c={};for(b.push(c);null!==l;){var e=w(l),v=L(w(l.a),b);c[e]=v;l=l.a.a}e=Q(a.a.a,b);b.pop(c);return e}if("lambda"===c)return M(x(a),a.a.a,b);if("if"===c)c=x(a),e=w(a.a.a),l=w(a.a.a.a),c=L(c,b),a=null==c?l:e;else if("cond"===c){c=a.a;for(l=null;null!==c;){e=w(c);v=w(e);e=e.a;if("else"==v||null!==L(v,b)){l=e;break}c=c.a}a=n("begin",l)}else if("begin"===c){e=a.a;if(null==e)return"undefined";
for(;null!==e.a;)L(w(e),b),e=e.a;a=e.e}else{if("eval"===c)return L(L(x(a),b),b);if("apply"===c)return L(n(L(x(a),b),L(w(a.a.a),b)),b);if("function"===typeof c)return c.call(null,function(a,b){for(var c=[];null!==a;)c.push(L(w(a),b)),a=a.a;return c}(a.a,b));if("macroexpand-1"===c)return c=L(x(a),b),P(L(w(c),b),c.a)[0];if("defmacro"===c)return c=N(w(a.a.a),a.a.a.a,b),b[0][x(a)]=c;if("while"===c){c=x(a);for(e=a.a.a;L(c,b);)Q(e,b);return"undefined"}if("get-env"===c)return b.slice(0);if(6===c.d){for(var l=
a.a,v=c.h.slice(0),h=c.j,e=c.body,c={},t=h.g,h=h.f,r=0;r<h.length;r++){if("."===h[r]){if(null==l){var s=h[r+1];c[s]=t[r+1]}else{var s=h[r+1],B=O(l,b);c[s]=B}break}null==l?h[r]in c||(c[h[r]]=t[r]):(s=w(l),"string"===typeof s&&":"===s[0]?(s=s.slice(1),l=l.a,B=L(w(l),b),c[s]=B,s===h[r]||h[r]in c||(c[h[r]]=t[r])):(s=h[r],B=L(w(l),b),c[s]=B),l=l.a)}v.push(c);a=n("begin",e);b=v}else{if(4===c.d)return c=P(c,a.a),L(c[0],c[1]);if(c instanceof Array)return e=L(x(a),b),!e instanceof m?(console.log("ERROR: invalid index"),
"undefined"):e>=c.length||0>e?(console.log("ERROR: Index out of boundary"),"undefined"):c[e.b];if(c instanceof Object&&!(c instanceof m||c instanceof f))return e=L(x(a),b),e in c?c[e]:"undefined";c=L(w(a),b);e=n(c,a.a);if("undefined"===c||c instanceof m)return console.log("ERROR: Invalid Function "+(c instanceof m?C(c):c)),console.log("      WITH EXP: "+G(a)),"undefined";a=e}}}else return a}}
var R={"+":function(a){var b=a[0];a=a[1];var c=b instanceof m,d=a instanceof m;if(c&&d)return 12===b.d||12===a.d?new m(b.b/b.c+a.b/a.c,1,12):A(b.b*a.c+a.b*b.c,b.c*a.c);c&&(b=C(b));d&&(a=C(a));return b+a},"-":function(a){var b=a[0];a=a[1];var c=b instanceof m,d=a instanceof m;if(c&&d)return 12===b.d||12===a.d?new m(b.b/b.c-a.b/a.c,1,12):A(b.b*a.c-a.b*b.c,b.c*a.c);c&&(b=C(b));d&&(a=C(a));return b-a},"*":function(a){var b=a[0];a=a[1];var c=b instanceof m,d=a instanceof m;if(c&&d)return 12===b.d||12===
a.d?new m(b.b/b.c*(a.b/a.c),1,12):A(b.b*a.b,b.c*a.c);c&&(b=C(b));d&&(a=C(a));return b*a},"/":function(a){var b=a[0];a=a[1];var c=b instanceof m,d=a instanceof m;if(c&&d)return 12===b.d||12===a.d?new m(b.b/b.c/(a.b/a.c),1,12):0===a.b?(console.log("ERROR: Cannot divide by 0"),"false"):A(b.b*a.c,b.c*a.b);c&&(b=C(b));d&&(a=C(a));return b/a},"<":function(a){var b=a[0];a=a[1];var c=a instanceof m;b instanceof m&&(b=b.b/b.c);c&&(a=a.b/a.c);return b<a?"true":null},"eq?":function(a){var b=a[0];a=a[1];var c=
a instanceof m;b instanceof m&&(b=b.b/b.c);c&&(a=a.b/a.c);return b===a?"true":null},"number?":function(a){return a[0]instanceof m?"true":null},"ratio?":function(a){return a[0]instanceof m&&10===a[0].d&&1!==a[0].c?"true":null},"float?":function(a){return a[0]instanceof m&&12===a[0].d?"true":null},"integer?":function(a){return a[0]instanceof m&&10===a[0].d&&1==a[0].c?"true":null},numerator:function(a){if(a[0]instanceof m)return new m(a[0].b,1,10);console.log("ERROR: Function numerator wrong type parameters");
return"undefined"},denominator:function(a){if(a[0]instanceof m)return new m(a[0].c,1,10);console.log("ERROR: Function numerator wrong type parameters");return"undefined"},"null?":function(a){return null===a[0]?"true":null},cons:function(a){return n(a[0],a[1])},car:function(a){return w(a[0])},cdr:function(a){return a[0].a},"set-car!":function(a){var b=a[0];a=a[1];if("string"!==typeof b&&2===b.d)return b.e=a,b;console.log("ERROR: Function set-car! wrong type parameters");return"undefined"},"set-cdr!":function(a){var b=
a[0];a=a[1];if("string"!==typeof b&&2===b.d)return b.a=a,b;console.log("ERROR: Function set-car! wrong type parameters");return"undefined"},vector:function(a){return a},dictionary:function(a){for(var b={},c=0;c<a.length;c+=2)b[a[c]]=a[c+1];return b},conj:function(a){var b=a[0];a=a[1];if(2===b.d)return n(a,b);if(b instanceof Array)return b=b.slice(0),b.push(a),b;if(b instanceof Object){var b=Object.create(b),c;for(c in a)b[c]=a[c];return b}},"conj!":function(a){var b=a[0];a=a[1];if(2===b.d)return n(a,
b);if(b instanceof Array)return b.push(a),b;if(b instanceof Object){for(var c in a)b[c]=a[c];return b}},assoc:function(a){var b=a[0],c=a[1];a=a[2];if(b instanceof Array)return b=b.slice(0),b[c.b]=a,b;if(b instanceof Object)return b=Object.create(b),b[c]=a,b;console.log("ERROR...Function assoc wrong type parameters")},"assoc!":function(a){var b=a[0],c=a[1];a=a[2];if(b instanceof Array)return b[c.b]=a,b;if(b instanceof Object)return b[c]=a,b;console.log("ERROR...Function assoc wrong type parameters")},
pop:function(a){a=a[0];if(a instanceof Array)return a=a.slice(0),a.pop(),a;if(2===a.d)return a.a;console.log("ERROR...Function pop wrong type parameters")},"pop!":function(a){a=a[0];if(a instanceof Array)return a.pop(),a;console.log("ERROR...Function pop wrong type parameters")},random:function(){return new m(Math.random(),1,12)},"->ratio":function(a){a=a[0];if(u(a)){if(10===a.d)return a;a=a.b;var b;b=""+a;b=Math.pow(10,b.length-(b.indexOf(".")+1));return A(a*b,b)}console.log("Function ->ratio --- only support number type data");
return"undefined"},"dictionary-keys":function(a){return Object.keys(a[0])},ref:function(a){var b=a[0];a=a[1];if("string"===typeof b)return b[a.b];if(2===b.d){var c=function(a,b){return null===a?null:0===b?w(a):c(a.a,b-1)};return c(b,a.b)}if(b instanceof Array){var d=a.b;return 0>d||d>=b.length?(console.log("ERROR: Index out of boundary"),"undefined"):b[a.b]}if(b instanceof Object)return a in b?b[a]:"undefined";console.log("ERROR: Function ref wrong type parameters")},"->str":function(a){return G(a[0])},
"typeof":function(a){a=a[0];if(null===a)return"null";if("string"===typeof a)return"atom";if(a instanceof m)return"number";if(a instanceof f)return"list";if(a instanceof Array)return"vector";if(6===a.d||8===a.d)return"procedure";if(4===a.d)return"macro";if(a instanceof Object)return"dictionary";console.log("ERROR: Cannot judge type");return"undefined"},len:function(a){a=a[0];if(null===a)return new m(0,1,10);if("string"===typeof a)return new m(a.length,1,10);if(2===a.d){var b=function(a,d){return null===
a?d:b(a.a,d+1)};return new m(b(a,0),1,10)}if(a instanceof Array)return new m(a.length,1,10);console.log("ERROR: Function len wrong type parameters");return"undefined"},slice:function(a){var b=a[0],c=a[1];a=a[2];if(!(c instanceof m&&a instanceof m))return console.log("ERROR: Function slice wrong type parameters"),"undefined";if(b instanceof Array)return b.slice(c.b,a.b);if(2===b.d){var d=function(a,b,c,h){return h>=b?h===c?null:n(w(a),d(a.a,b,c,h+1)):d(a.a,b,c,h+1)};return d(b,c.b,a.b,0)}if("string"===
typeof b)return b.slice(c.b,a.b);console.log("ERROR: Function slice wrong type parameters");return"undefined"},display:function(a){try{var b=a[0];if(null===b)return console.log("()"),"undefined";u(b)?console.log(C(b)):"string"===typeof b?console.log(b):b instanceof f?console.log(D(b)):b instanceof Array?console.log(E(b)):6===b.d?console.log("< user-defined-procedure >"):"function"===typeof b?console.log("< builtin-procedure >"):4===b.d?console.log("< macro >"):b instanceof Object?console.log(F(b)):
console.log("Function display: Invalid Parameters Type");return"undefined"}catch(c){return console.log(c),"undefined"}},math:{acos:function(a){return new m(Math.acos(a[0].b/a[0].c),1,12)},acosh:function(a){return new m(Math.k(a[0].b/a[0].c),1,12)},asin:function(a){return new m(Math.asin(a[0].b/a[0].c),1,12)},asinh:function(a){return new m(Math.l(a[0].b/a[0].c),1,12)},atan:function(a){return new m(Math.atan(a[0].b/a[0].c),1,12)},atanh:function(a){return new m(Math.m(a[0].b/a[0].c),1,12)},ceil:function(a){return new m(Math.ceil(a[0].b/
a[0].c),1,10)},cos:function(a){return new m(Math.cos(a[0].b/a[0].c),1,12)},cosh:function(a){return new m(Math.n(a[0].b/a[0].c),1,12)},exp:function(a){return new m(Math.exp(a[0].b/a[0].c),1,12)},floor:function(a){return new m(Math.floor(a[0].b/a[0].c),1,10)},loge:function(a){return new m(Math.log(a[0].b/a[0].c),1,12)},pow:function(a){return 10===a[0].d&&10===a[1].d&&1===a[1].c?new m(Math.pow(a[0].b,a[1].b),Math.pow(a[0].c,a[1].b),10):new m(Math.pow(a[0].b/a[0].c,a[1].b/a[1].c),1,12)},sin:function(a){return new m(Math.sin(a[0].b/
a[0].c),1,12)},sinh:function(a){return new m(Math.s(a[0].b/a[0].c),1,12)},tan:function(a){return new m(Math.tan(a[0].b/a[0].c),1,12)},tanh:function(a){return new m(Math.t(a[0].b/a[0].c),1,12)}},js:function(a){var b=a[0];a=a.slice(1);for(var c=0;c<a.length;c++)a[c]instanceof m&&(a[c]=a[c].b/a[c].c);b=eval(b).apply(null,a);return!isNaN(parseFloat(b))&&isFinite(b)?new m(b,1,12):"boolean"===typeof b?!0===b?"true":null:"undefined"===typeof b?"undefined":b},read:function(a){return a[0]instanceof f?n(a[0],
null):z(y(a[0]))},input:function(a){"undefined"===typeof prompt?(console.log("ERROR: prompt function is not defined in current javascript scope."),console.log("You need to rewrite 'function TOY_getINPUT(stack_param)' by yourself and return string format of output"),a="undefined"):a=0==a.length?prompt(""):prompt(a[0]);return a},"__undefined?__":function(a){var b=a[0];a=a[1];for(var c=0;c<a.length;c++)if(b in a[c])return null;return"true"},"true":"true","false":null,def:"def","set!":"set!",cond:"cond",
"if":"if",quote:"quote",quasiquote:"quasiquote",lambda:"lambda",defmacro:"defmacro","while":"while",virtual_file_system:{}},S=[R];"undefined"!=typeof module&&(module.i.q=y,module.i.r=z,module.i.p=Q,module.i.display=function(a){R.display([a])},module.i.o=S);
Q(z(y('(def (list . args) args) (set! + (let (vector o_+ + +_iter (lambda (vector result args) (cond ((null? args) result) (else (+_iter (o_+ result (car args)) (cdr args)))))) (lambda (vector . args) (cond ((null? args) (display ("ERROR : Function + invalid parameters. Please provide parameters"))) (else (+_iter (car args) (cdr args))))))) (set! - (let (vector o_- - -_iter (lambda (vector result args) (cond ((null? args) result) (else (-_iter (o_- result (car args)) (cdr args)))))) (lambda (vector . args) (cond ((null? args) (display ("ERROR : Function - invalid parameters. Please provide parameters"))) ((null? (cdr args)) (o_- 0 (car args))) (else (-_iter (car args) (cdr args))))))) (set! * (let (vector o_* * *_iter (lambda (vector result args) (cond ((null? args) result) (else (*_iter (o_* (car args) result) (cdr args)))))) (lambda (vector . args) (cond ((null? args) (display ("ERROR : Function * invalid parameters. Please provide parameters"))) (else (*_iter (car args) (cdr args))))))) (set! / (let (vector o_div / div_iter (lambda (vector result args) (cond ((null? args) result) (else (div_iter (o_div result (car args)) (cdr args)))))) (lambda (vector . args) (cond ((null? args) (display ("ERROR : Function / invalid parameters. Please provide parameters"))) ((null? (cdr args)) (o_div 1 (car args))) (else (div_iter (car args) (cdr args))))))) (def #t "true") (def #f ()) (def nil ()) (def (factorial n) (if (eq? n 0) 1 (* n (factorial (- n 1))))) (set! factorial (lambda (vector n) (def (factorial-acc n acc) (if (eq? n 0) acc (factorial-acc (- n 1) (* acc n)))) (factorial-acc n 1))) (defmacro and (vector arg0 arg1) (quasiquote (if (unquote arg0) (if (unquote arg1) true false) false))) (defmacro or (vector arg0 arg1) (quasiquote (if (unquote arg0) true (if (unquote arg1) true false)))) (def (> arg0 arg1) (< arg1 arg0)) (def (<= arg0 arg1) (or (< arg0 arg1) (eq? arg0 arg1))) (def (>= arg0 arg1) (or (> arg0 arg1) (eq? arg0 arg1))) (set! < (let (vector old-< < <-iter (lambda (vector args cur) (if (null? args) true (if (old-< cur (car args)) (<-iter (cdr args) (car args)) false)))) (lambda (vector . args) (if (null? args) (display "Please provide arguments for <") (<-iter (cdr args) (car args)))))) (set! > (let (vector old-> > >-iter (lambda (vector args cur) (if (null? args) true (if (old-> cur (car args)) (>-iter (cdr args) (car args)) false)))) (lambda (vector . args) (if (null? args) (display "Please provide arguments for >") (>-iter (cdr args) (car args)))))) (set! eq? (let (vector old-eq? eq? eq?-iter (lambda (vector args cur) (if (null? args) true (if (old-eq? cur (car args)) (eq?-iter (cdr args) (car args)) false)))) (lambda (vector . args) (if (null? args) (display "Please provide arguments for eq?") (eq?-iter (cdr args) (car args)))))) (set! <= (let (vector old-<= <= <=-iter (lambda (vector args cur) (if (null? args) true (if (old-<= cur (car args)) (<=-iter (cdr args) (car args)) false)))) (lambda (vector . args) (if (null? args) (display "Please provide arguments for <=") (<=-iter (cdr args) (car args)))))) (set! >= (let (vector old->= >= >=-iter (lambda (vector args cur) (if (null? args) true (if (old->= cur (car args)) (>=-iter (cdr args) (car args)) false)))) (lambda (vector . args) (if (null? args) (display "Please provide arguments for >=") (>=-iter (cdr args) (car args)))))) (set! and (lambda (vector . args) (def (and-iter args) (if (null? args) true (if (car args) (and-iter (cdr args)) false))) (and-iter args))) (set! or (lambda (vector . args) (def (or-iter args) (if (null? args) false (if (car args) true (or-iter (cdr args))))) (or-iter args))) (def (not arg0) (if arg0 false true)) (def (pair? arg) (eq? (typeof arg) (quote list))) (def (list? arg) pair?) (def (atom? arg) (eq? (typeof arg) (quote atom))) (def string? atom?) (def (vector? arg) (eq? (typeof arg) (quote vector))) (def (dictionary? arg) (eq? (typeof arg) (quote dictionary))) (def (undefined? arg) (eq? arg (quote undefined))) (def (procedure? arg) (eq? (typeof arg) (quote procedure))) (def (function? arg) procedure?) (def (macro? arg) (eq? (typeof arg) (quote macro))) (def ** (math :pow)) (def ^ (math :pow)) (assoc! math :log (lambda (vector x y) (/ ((math :loge) y) ((math :loge) x)))) (assoc! math :sec (lambda (vector x) (/ 1 ((math :cos) x)))) (assoc! math :csc (lambda (vector x) (/ 1 ((math :sin) x)))) (assoc! math :cot (lambda (vector x) (/ 1 ((math :tan) x)))) (def (% n0 n1) (let (vector result (->int (/ n0 n1))) (- n0 (* result n1)))) (def (append a b) (if (null? a) b (cons (car a) (append (cdr a) b)))) (def (reverse l) (def (reverse-iter result l) (if (null? l) result (reverse-iter (cons (car l) result) (cdr l)))) (reverse-iter () l)) (defmacro defn (vector fn_name args . body) (list (quote def) fn_name (cons (quote lambda) (cons args body)))) (defmacro comment (vector . args) ()) (def (map func . args) (def length (len (car args))) (def (get-args-list args i) (if (null? args) () (cons (ref (car args) i) (get-args-list (cdr args) i)))) (def (map-iter func args i) (cond ((eq? i length) ()) (else (cons (apply func (get-args-list args i)) (map-iter func args (+ i 1)))))) (map-iter func args 0)) (def (str . args) (def (str-iter result args) (if (null? args) result (str-iter (+ result (->str (car args))) (cdr args)))) (str-iter "" args)) (def (->float num) (* num 1.0000000000)) (def (->int num) (cond ((eq? num 0) 0) ((> num 0) ((math :floor) num)) (else ((math :ceil) num)))) (def (diff func diff-at-point :error 0.0000010000) (def (diff_ error) (/ (- (func diff-at-point) (func (- diff-at-point error))) error)) (diff_ error)) (def (integral func a b :dx 0.0100000000) (def (sum term a next b) (if (> a b) 0 (+ (term a) (sum term (next a) next b)))) (def (add-dx x) (+ x dx)) (* (sum func (+ a (/ dx 2.0000000000)) add-dx b) dx)) (def (set-car x value) (cons value (cdr x))) (def (set-cdr x value) (cons (car x) value)) (set! undefined? (lambda (vector var-name) (__undefined?__ var-name (get-env)))) (def (make-gensym) (let (vector count 0 step 1 set-name (lambda (vector) (set! count (+ count step)) (let (vector var-name (str "t_" count)) (if (undefined? var-name) var-name (set-name))))) set-name)) (def gensym (make-gensym))')),S);